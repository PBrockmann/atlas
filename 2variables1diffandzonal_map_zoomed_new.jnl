
!**************************************************************
! Author: Patrick Brockmann
! Contact: Patrick.Brockmann@ipsl.jussieu.fr
! History:
! Modification: 
!   *Ionela Musat, 2009/05/07
!    ajout moyenne zonale du modele avec meme masque que les obs
!
!**************************************************************

set memory/size=20

!************************************************************
def sym title=($01)
def sym file1=($02)
def sym variable1=($03)
def sym file2=($04)
def sym variable2=($05)
def sym qualifiers=/nolab/pal=grads/title=""/grat=(dash,color=6)($06% %)
def sym qualifiersdiff=/nolab/pal=grads/title=""/grat=(dash,color=6)($07% %)
def sym qualifiersplot=/nolab/transpose/grat=(dash,color=6)($08% %)
def sym qualifiersplotdiff=/nolab/transpose/color=1/grat=(dash,color=6)($09% %)
def sym method=($10%fill%)
def sym limits=($11%XXXXX%)

def sym polygonfile1=earth_continents
def sym polygonfile2=earth_continents
def sym polygonfilediff=earth_continents

!------------------------
! calclimits is used to bypass the fact that
! ferret will not computed the same result for complete domain
! in expressions var[x=@ave,y=@ave] and var[x=0:450@ave,y=-90:90@ave]
! Note that yes? list var[x=20:60@ave,y=30:60@ave] and
!           yes? let var1=var[x=20:60,y=30:60]; list var1[x=@ave,y=@ave]
! will not give the same result because the 2nd expression use for weight      
! all the complete surface cells. On the contrary, the 1st expression compute
! a weight considering cell splitting.
!------------------------
if ($limits%|XXXXX>true|*>false|%) then
        def sym viewlimits=[x=0:450,y=-90:90]
        ppl set calclimits
else
        def sym viewlimits=($limits)
        def sym calclimits=($limits)
endif
!------------------------

!************************************************************

!------------------------
let variable1=($variable1)
let variable1_view=variable1($viewlimits)
let variable1_calc=variable1($calclimits)
go symbol_basename_and_define basefile1 "($file1)"

let variable2=($variable2)
let variable2_view=variable2($viewlimits)
let variable2_calc=variable2($calclimits)
go symbol_basename_and_define basefile2 "($file2)"

!------------------------
use "($file1)"
set axis/modulo `variable1,return=xaxis`

use "($file2)"
set axis/modulo `variable2,return=xaxis`

!------------------------
def grid/x=variable1[d=1]/y=variable1[d=1] gridvar1
def grid/x=variable2[d=2]/y=variable2[d=2] gridvar2

let variable1_g2=variable1[g=gridvar2,d=1]
let variable2_g1=variable2[g=gridvar1,d=2]
!let variable2_g1_mask=variable2_g1*0+1
!let variable1_masked=variable1*variable2_g1_mask
let variable2_mask=variable2[d=2]*0+1
let variable1_masked=variable1_g2*variable2_mask
let variable1_masked_calc=variable1_masked($calclimits)

let diff=variable1[d=1]-variable2_g1
let diff_view=diff($viewlimits)
let diff_calc=diff($calclimits)

!------------------------
! Color for graticule
ppl color 6, 80, 80, 80

!------------------------
go page_new -i 1 3 0 70 0 90 

!------------------------
set v 1 
go margins_set 20 10 08 10
ppl axlabp,-1,-1                  ! bottom, left (default) 
($method)($qualifiers) variable1_view[d=1]
go cont_cylin 0 /over/nolab " " ($polygonfile1)
go text_put 2 95 "@AS($basefile1)" -1 0.35
go text_put 5 90 "@AS($variable1)" -1 0.35
go text_stat3_put 90 85 variable1_calc[d=1] 1 0.25 

!------------------------
set v 2 
go margins_set 20 10 08 10
ppl axlabp,-1,-1                  ! bottom, left (default) 
($method)($qualifiers) variable2_view
go cont_cylin 0 /over/nolab " " ($polygonfile2)
go text_put 2 95 "@AS($basefile2)" -1 0.35
go text_put 5 90 "@AS($variable2)" -1 0.35
go text_stat3_put 90 85 variable2_calc 1 0.25 

!------------------------
set v 3 
go margins_set 20 10 08 10
ppl axlabp,-1,-1                  ! bottom, left (default) 
($method)($qualifiersdiff) diff_view
go cont_cylin 0 /over/nolab " " ($polygonfilediff)
go text_put 2 95 "@ASDifference" -1 0.35
go text_put 5 90 "@AS($variable1) - ($variable2)" -1 0.35
go text_stat3_put 90 85 diff_calc 1 0.25

!------------------------
! /text=0.46 found from show viewport/all
def view/xlim=0.7,1./ylim=0.6,0.9/text=0.46 4
set v 4 
go margins_set 20 10 05 20 
ppl axlabp,-1,1                   ! bottom, right
plot($qualifiersplot) variable1_calc[i=@ave,d=1]
plot/color=2/nolab/transpose/over variable2_calc[i=@ave,d=2]
go text_legend_put 05 15 89 " @ASModel" 1 0.35
go text_legend_put 05 15 85 " @ASReference" 2 0.35
ppl axlabp,-1,-1                  ! bottom, left (default) 

!------------------------
def view/xlim=0.7,1./ylim=0.3,0.6/text=0.46 5 
set v 5 
go margins_set 20 10 05 20 
ppl axlabp,-1,1                   ! bottom, right
plot/color=4($qualifiersplot) variable1_masked_calc[i=@ave,d=1]
plot/color=2/nolab/transpose/over variable2_calc[i=@ave,d=2]
go text_legend_put 05 15 89 " @ASModel (on reference)" 4 0.35
go text_legend_put 05 15 85 " @ASReference" 2 0.35
ppl axlabp,-1,-1                  ! bottom, left (default) 

!------------------------
def view/xlim=0.7,1./ylim=0.0,0.3/text=0.46 6
set v 6 
go margins_set 20 10 05 20 
ppl axlabp,-1,1                   ! bottom, right
plot($qualifiersplotdiff) diff_calc[i=@ave]
go text_legend_put 05 15 89 " @ASModel<NL> - Reference (on model)" 1 0.35
ppl axlabp,-1,-1                  ! bottom, left (default) 

!------------------------
go logo_put ipsl

go textlayer_new
go textlayer_text_put 2 95 "@AS($title)" -1 0.37


