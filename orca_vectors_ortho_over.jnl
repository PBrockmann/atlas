\cancel mode verify

!**************************************************************
! Description:
!
! Usage:
!
! Example:
!
! Notes:
!
! Calls:
!
! Author: Olivier Marti, Patrick Brockmann
! Contact: Olivier.Marti@cea.fr, Patrick.Brockmann@ipsl.jussieu.fr
! $Date: 2011/09/12 12:17:49 $
! $Name: ATLAS_672_1_1 $
! $Revision: 1.1.1.6 $
! History:
! Modification:
!
!**************************************************************

let ME_CM = ($01)
let ME_CP = ($02)
let ME_vec_i = ($03)
let ME_vec_j = ($04)
def sym ME_skip = ($05%1%)
def sym ME_length = ($06%0.1%)

!-----------------------------------------------
set data/save

!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
! Olivier Marti
! Calcul des composantes dans le repere est-nord 
! (utilisables telles que pour un trace en grille rectangulaire)

! On ne peut pas utiliser le fichier ORCA2.0_grid.nc, 
! car il manque les lignes trigonometriques gsin[uv] et gcos[uv]
def sym ME_ocegrid=ORCA2.0_meshmask.nc
use ($ME_ocegrid)

! Calcul des composantes dans le repere est-nord
! pour etre propre, on fait en meme temps le changement de repere et la moyenne au point T
let ME_txcos = ME_vec_i[g=gcosu[d=($ME_ocegrid)]] * gcosu[d=($ME_ocegrid)]
let ME_txsin = ME_vec_i[g=gsinu[d=($ME_ocegrid)]] * gsinu[d=($ME_ocegrid)]
let ME_tycos = ME_vec_j[g=gcosv[d=($ME_ocegrid)]] * gcosv[d=($ME_ocegrid)]
let ME_tysin = ME_vec_j[g=gsinv[d=($ME_ocegrid)]] * gsinv[d=($ME_ocegrid)]

let ME_vec_est = 0.5 * ( ME_txcos + ME_txcos[i=@shf:-1] - ME_tysin - ME_tysin[j=@shf:-1] )
let ME_vec_nor = 0.5 * ( ME_tycos + ME_tycos[j=@shf:-1] + ME_txsin + ME_txsin[i=@shf:-1] )

!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
go my_mp_orthographic ME_CM ME_CP nav_lon[d=($ME_ocegrid)] nav_lat[d=($ME_ocegrid)]

!-----------------------------------------------
let ME_dl = ME_vec_est * ME_mp_mask / COS(ME_mp_phi)
let ME_dp = ME_vec_nor * ME_mp_mask
let ME_dx = ME_mp_R*ME_mp_bigK*((-1)*SIN(ME_mp_phi)*SIN(ME_mp_lambda-ME_mp_lambda0)*ME_dp + COS(ME_mp_phi)*COS(ME_mp_lambda-ME_mp_lambda0)*ME_dl)
let ME_dy = ME_mp_R*ME_mp_bigK*(COS(ME_mp_phi1)*COS(ME_mp_phi)*ME_dp+SIN(ME_mp_phi1)*SIN(ME_mp_phi)*COS(ME_mp_lambda-ME_mp_lambda0)*ME_dp+SIN(ME_mp_phi1)*COS(ME_mp_phi)*SIN(ME_mp_lambda-ME_mp_lambda0)*ME_dl)

!-----------------------------------------------
! La commande vector est plus lente et surtout bugguee (vecteurs tordus !) v570
let ME_filename_main="vect_"
let ME_filename_suffix={spawn:" echo $PPID"}
let ME_filename=ME_filename_main+ME_filename_suffix
sp rm -f `ME_filename`.dat `ME_filename`.raw 
LIST/QUIET/NOHEAD/FORMAT=(2F12.4,2E12.3)/FILE=`ME_filename`.raw ME_x_page, ME_y_page, ME_dx, ME_dy
! selection suivant le parametre skip (saut de selection); par defaut 1/1
if `($ME_skip) ne 1` then
	sp cat `ME_filename`.raw | awk 'NR%($ME_skip) {print}' > `ME_filename`.skip
	sp mv -f `ME_filename`.skip `ME_filename`.raw
endif
sp grep -v "E+35" `ME_filename`.raw > `ME_filename`.dat
sp echo "0 0 0 0" >> `ME_filename`.dat
! Le script my_scattered_vectors correspond a scattered_vectors + retrait variables definies
GO my_scattered_vectors `ME_filename`.dat ($ME_length) clock
sp rm -f `ME_filename`.dat `ME_filename`.raw 

!-----------------------------------------------
cancel data ($ME_ocegrid)
set data/restore

!-----------------------------------------------
cancel variable ME_*
cancel symbol ME_*

!**************************************************
set mode/last verify

