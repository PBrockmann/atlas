
!**************************************************************
! Author: Patrick Brockmann
! Contact: Patrick.Brockmann@ipsl.jussieu.fr
! $Date: 2011/09/12 12:17:47 $
! $Name: ATLAS_672_1_1 $
! $Revision: 1.1.1.11 $
! History:
! Modification:
!
!**************************************************************

set memory/size=20

!************************************************************
def sym title=$1
def sym file1=$2
def sym variable1=$3
def sym file2=$4
def sym variable2=$5
def sym qualifiersdiff=$6%/pal=grads/lev=20%
def sym method=$7%fill% 
ppl set units $8% %
def sym zlevel=$9
def sym surface_pressure_name=($10%PSOL%)

def sym viewlimits=[x=0:450,y=-90:90,z=($zlevel)]

!************************************************************
let variable1=($variable1)
go symbol_basename_and_define basefile1 "($file1)"
let variable2=($variable2)
go symbol_basename_and_define basefile2 "($file2)"

use "($file1)"
def sym variable1_lstart=`variable1,return=lstart`
def sym variable1_lend=`variable1,return=lend`
if `($variable1_lstart) ne ($variable1_lend)` then
   say "Variable1 must have a time dimension equals to 1"
   exit
endif
go LMDZ_define_pressure ($surface_pressure_name)[l=($variable1_lstart),d=($basefile1)]
let variable1z = ZAXREPLACE(variable1[d=($basefile1)],pressure,Z[GZ=LMDZ_stdpressurelevels])

def grid/x=variable1z/y=variable1z gridvar1


use "($file2)"
def sym variable2_lstart=`variable2,return=lstart`
def sym variable2_lend=`variable2,return=lend`
if `($variable2_lstart) ne ($variable2_lend)` then
   say "Variable2 must have a time dimension equals to 1"
   exit
endif
go LMDZ_define_pressure ($surface_pressure_name)[l=($variable2_lstart),d=($basefile2)]
let variable2z = ZAXREPLACE(variable2[d=($basefile2)],pressure,Z[GZ=LMDZ_stdpressurelevels])

def grid/x=variable2z/y=variable2z gridvar2

def sym var1_size=`variable1z[d=($basefile1)],return=size`
def sym var2_size=`variable2z[d=($basefile2)],return=size`
if `($var1_size) gt ($var2_size)` then
	let variable2z_regridded=variable2z[g=gridvar1,d=($basefile2)]
	let diffz=variable1z[d=($basefile1)]-variable2z_regridded
else
	let variable1z_regridded=variable1z[g=gridvar2,d=($basefile1)]
	let diffz=variable1z_regridded-variable2z[d=($basefile2)]
endif

go page_new -li 1 1 

set v 1 

! Control number of digits in figures in the keybar
ppl shakey ,,,,4

go margins_set 20 10 10 10
($method)($qualifiersdiff)/title=" "/set_up diffz($viewlimits)
go unlabels 1 8
ppl ($method)
go cont_cylin 0 /over/nolab " " earth_continents

go text_put 5 95 "@AS($title)" -1 0.3
go text_put 5 92 "@ASDifference: ($basefile1) - ($basefile2)" -1 0.3
go text_put 5 89 "@AS           ($variable1) - ($variable2) at ($zlevel) mb" -1 0.3
go text_put 93 85 "@AS($units)" 0 0.3

go text_stat3_put 5 85 diffz[z=($zlevel)] -1 0.3

