#**************************************************************
# Author: Patrick Brockmann
# Contact: Patrick.Brockmann@cea.fr
# $Date: 2009/05/14 15:09:35 $
# $Name: ATLAS_608_1_5 $
# $Revision: 1.1.1.1 $
# History:
# Modification:
#**************************************************************

##################################################################################################################
#-----------------------------------------------------------------------------------------------------------------
#  field | files patterns | files additionnal | operations | title | units | calcul of area
#-----------------------------------------------------------------------------------------------------------------
#
#   field = name of the field to monitore 
#   files patterns = pattern of the files used to monitore the field (must be discriminant) 
#   files additionnal = additionnal files accessible by $FER_DATA
#   operations = operations to calculate the field 
#   title = variable title
#   units = variable units
#   calcul of area = expression to use for the weight average
#
# Notes:
#   - Comment lines begin by '#' character
#   - Separator between fields is '|' character
#   - Operations must use the ferret syntax
#   - Each variable must be referenced to its dataset ie var[d=x]
#   - files patterns, operations,title,units must be enclosed with character '"'
#   - fields will be presented through an html page with thumbnails global, north, south, land, ocean.
#     Use a field name with one of these pattern to display it under the corresponding thumbnail.
#
##################################################################################################################

color=6D80FF
smooth=12
#-----------------------------------------------------------------------------------------------------------------
#  field | files patterns | files additionnal | operations | title | units | calcul of area
#-----------------------------------------------------------------------------------------------------------------
 sosstsst_global  | "sosstsst"  | ORCA1.0_grid.nc | "(sosstsst[d=1])"                                    | "Sea Surface Temperature (GLOBAL)" | "degC"  | "mask[k=1,d=2]*area[d=2]"
 sosaline_global  | "sosaline"  | ORCA1.0_grid.nc | "(sosaline[d=1])"                                    | "Sea Surface Salinity (GLOBAL)"    | "PSU"   | "mask[k=1,d=2]*area[d=2]"
 sossheig_global  | "sossheig"  | ORCA1.0_grid.nc | "(sossheig[d=1])"                                    | "Sea Surface Heigh (GLOBAL)"       | "m"     | "mask[k=1,d=2]*area[d=2]"
 sohefldo_global  | "sohefldo"  | ORCA1.0_grid.nc | "(sohefldo[d=1])"                                    | "Net Downward Heat Flux (GLOBAL)"  | "W/m^2" | "mask[k=1,d=2]*area[d=2]"
 somxl010_north   | "somxl010"  | ORCA1.0_grid.nc | "(somxl010[d=1])" | "Mixed layer depth (NORTH)"         | "m"     | "(if lat[d=2] gt 0 then mask[k=1,d=2]*area[d=2])"
 somxl010_south   | "somxl010"  | ORCA1.0_grid.nc | "(somxl010[d=1])" | "Mixed layer depth (SOUTH)"         | "m"     | "(if lat[d=2] lt 0 then mask[k=1,d=2]*area[d=2])"
 sosstsst_70N_90N | "sosstsst"  | ORCA1.0_grid.nc | "(sosstsst[d=1])" | "Sea Surface Temperature (70N-90N)" | "degC"  | "(if lat[d=2] ge  70                     then mask[k=1,d=2]*area[d=2])"
 sosstsst_50N_70N | "sosstsst"  | ORCA1.0_grid.nc | "(sosstsst[d=1])" | "Sea Surface Temperature (50N-70N)" | "degC"  | "(if lat[d=2] ge  50 and lat[d=2] le  70 then mask[k=1,d=2]*area[d=2])"
 sosstsst_30N_50N | "sosstsst"  | ORCA1.0_grid.nc | "(sosstsst[d=1])" | "Sea Surface Temperature (30N-50N)" | "degC"  | "(if lat[d=2] ge  30 and lat[d=2] le  50 then mask[k=1,d=2]*area[d=2])"
 sosstsst_10N_30N | "sosstsst"  | ORCA1.0_grid.nc | "(sosstsst[d=1])" | "Sea Surface Temperature (10N-30N)" | "degC"  | "(if lat[d=2] ge  10 and lat[d=2] le  30 then mask[k=1,d=2]*area[d=2])"
 sosstsst_10S_10N | "sosstsst"  | ORCA1.0_grid.nc | "(sosstsst[d=1])" | "Sea Surface Temperature (10S-10N)" | "degC"  | "(if lat[d=2] ge -10 and lat[d=2] le  10 then mask[k=1,d=2]*area[d=2])"
 sosstsst_30S_10S | "sosstsst"  | ORCA1.0_grid.nc | "(sosstsst[d=1])" | "Sea Surface Temperature (30S-10S)" | "degC"  | "(if lat[d=2] ge -30 and lat[d=2] le -10 then mask[k=1,d=2]*area[d=2])"
 sosstsst_50S_30S | "sosstsst"  | ORCA1.0_grid.nc | "(sosstsst[d=1])" | "Sea Surface Temperature (50S-30S)" | "degC"  | "(if lat[d=2] ge -50 and lat[d=2] le -30 then mask[k=1,d=2]*area[d=2])"
 sosstsst_70S_50S | "sosstsst"  | ORCA1.0_grid.nc | "(sosstsst[d=1])" | "Sea Surface Temperature (70S-50S)" | "degC"  | "(if                     lat[d=2] le -50 then mask[k=1,d=2]*area[d=2])"
 sosaline_70N_90N | "sosaline"  | ORCA1.0_grid.nc | "(sosaline[d=1])" | "Sea Surface Salinity (70N-90N)"    | "PSU"   | "(if lat[d=2] ge  70                     then mask[k=1,d=2]*area[d=2])"
 sosaline_50N_70N | "sosaline"  | ORCA1.0_grid.nc | "(sosaline[d=1])" | "Sea Surface Salinity (50N-70N)"    | "PSU"   | "(if lat[d=2] ge  50 and lat[d=2] le  70 then mask[k=1,d=2]*area[d=2])"
 sosaline_30N_50N | "sosaline"  | ORCA1.0_grid.nc | "(sosaline[d=1])" | "Sea Surface Salinity (30N-50N)"    | "PSU"   | "(if lat[d=2] ge  30 and lat[d=2] le  50 then mask[k=1,d=2]*area[d=2])"
 sosaline_10N_30N | "sosaline"  | ORCA1.0_grid.nc | "(sosaline[d=1])" | "Sea Surface Salinity (10N-30N)"    | "PSU"   | "(if lat[d=2] ge  10 and lat[d=2] le  30 then mask[k=1,d=2]*area[d=2])"
 sosaline_10S_10N | "sosaline"  | ORCA1.0_grid.nc | "(sosaline[d=1])" | "Sea Surface Salinity (10S-10N)"    | "PSU"   | "(if lat[d=2] ge -10 and lat[d=2] le  10 then mask[k=1,d=2]*area[d=2])"
 sosaline_30S_10S | "sosaline"  | ORCA1.0_grid.nc | "(sosaline[d=1])" | "Sea Surface Salinity (30S-10S)"    | "PSU"   | "(if lat[d=2] ge -30 and lat[d=2] le -10 then mask[k=1,d=2]*area[d=2])"
 sosaline_50S_30S | "sosaline"  | ORCA1.0_grid.nc | "(sosaline[d=1])" | "Sea Surface Salinity (50S-30S)"    | "PSU"   | "(if lat[d=2] ge -50 and lat[d=2] le -30 then mask[k=1,d=2]*area[d=2])"
 sosaline_70S_50S | "sosaline"  | ORCA1.0_grid.nc | "(sosaline[d=1])" | "Sea Surface Salinity (70S-50S)"    | "PSU"   | "(if                     lat[d=2] le -50 then mask[k=1,d=2]*area[d=2])"
#-----------------------------------------------------------------------------------------------------------------
