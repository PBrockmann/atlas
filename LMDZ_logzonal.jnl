\cancel mode verify

!**************************************************************
! Author: Patrick Brockmann
! Contact: Patrick.Brockmann@ipsl.jussieu.fr
! History:
! Modification:
!
!**************************************************************
! Examples: 
!  
! go LMDZ_logzonal.jnl /dir1/dir2/file_LMDZ19.nc temp[l=1] pres[l=1] /lev=10 shade 
! go LMDZ_logzonal.jnl /dir1/dir2/file_LMDZ39.nc temp[l=1] pres[l=1] /lev=10 shade 
!
! go LMDZ_logzonal.jnl /dir1/dir2/file_LMDZ19.nc temp[l=1] pres[l=1] /lev=10 shade 1 1200
! go LMDZ_logzonal.jnl /dir1/dir2/file_LMDZ39.nc temp[l=1] pres[l=1] /lev=10 shade 1 1200
!
! go LMDZ_logzonal.jnl /dir1/dir2/file_LMDZ19.nc temp[l=1] pres[l=1] /lev=10 fill 1 1200
! go LMDZ_logzonal.jnl /dir1/dir2/file_LMDZ19.nc temp[l=1] pres[l=1] /lev=10 contour/over 1 1200
! go LMDZ_logzonal.jnl /dir1/dir2/file_LMDZ39.nc temp[l=1] pres[l=1] /lev=10 fill 1 1200
! go LMDZ_logzonal.jnl /dir1/dir2/file_LMDZ39.nc temp[l=1] pres[l=1] /lev=10 contour/over 1 1200
!
! args:
!       * vlim_min must be in 0.01,0.1,1,10,100,1000 (power of 10)
!       * vlim_max can be different than power of 10 (ie 1200)
!  
! Known bugs: 
!	* little dots when limits are big (3 logs)
! 
!**************************************************************

def sym myfile=$1
def sym myvariable1=$2
def sym mypressure1=$3
def sym myqualifiers=$4%/lev=20%
def sym mymethod=$5%shade%
def sym myvlim_min=$6%100%                          ! Must be > 0 and power of 10
def sym myvlim_max=$7%1000%
def sym mytitle=$8%($myvariable1)%
ppl set myunits $9% %

!************************************************************
set data/save

let myvariable1_0=($myvariable1)
let mypressure1_0=($mypressure1)

use "($myfile)"
go symbol_basename_and_define mybasefile "($myfile)"

let myvariable1=myvariable1_0[d=($mybasefile)]
let mypressure1=mypressure1_0[d=($mybasefile)]

!------------------------
def sym myvariable1_lstart=`myvariable1,return=lstart`
def sym myvariable1_lend=`myvariable1,return=lend`
if `($myvariable1_lstart) ne ($myvariable1_lend)` then
   say "Variable1 must have a time dimension equals to 1"
   exit
endif

!------------------------
def sym myvariable1_ksize=`myvariable1,return=ksize`
if `($variable1_ksize) eq 39 or ($variable1_ksize) eq 59 or ($variable1_ksize) eq 79` then
        ! LMDZ 39 levels or LMDZ 59/79 levels set to 50 levels from ECMWF
	def sym pressurelevelsfile=ECMWF50_stdpressurelevels.nc
	use ($pressurelevelsfile)
	let myvariable1z = ZAXREPLACE(myvariable1,mypressure1,Z[GZ=ECMWF50_LEVELS])
	define axis/from_data/z/depth/units="mb" myzlog=log(Z[GZ=ECMWF50_LEVELS]) 
elif `($myvariable1_ksize) eq 19` then
	! LMDZ 19 levels set to 17 levels 
	def sym pressurelevelsfile=LMDZ_stdpressurelevels.nc
	use ($pressurelevelsfile)
	let myvariable1z = ZAXREPLACE(myvariable1,mypressure1,Z[GZ=LMDZ_stdpressurelevels])
	define axis/from_data/z/depth/units="mb" myzlog=log(Z[GZ=LMDZ_stdpressurelevels])
else
	exit
endif

let myvariable2=myvariable1z[gz=myzlog@asn]
set variable/title="($mytitle)"/units="($myunits)" myvariable2

!------------------------
! Control number of digits in figures in the keybar
ppl shakey ,,,,4

ppl tics ,,0,0
ppl axlabp -1,0
($mymethod)/set_up/hlim=-90:90/vlim=`log(($myvlim_min))`:`log(($myvlim_max))`($myqualifiers) myvariable2[i=@ave]

go unlabels 1 8 

ppl set myqualifiers1 $edit(myqualifiers,upcase) 
ppl set myisover $locate("/OVER",myqualifiers1)

if `($myisover) gt 0` then
	ppl ($mymethod)/over
else
!------------------------
	ppl ($mymethod)

ppl window,off

if `($myvlim_min) lt 0.1 and ($myvlim_max) ge 0.1` then 
   repeat/i=1:10:1 ( let myindice=i*1E-2 ; let myindicelog=log(myindice) ; \
	ppl aline 1,-93,`myindicelog`,-90,`myindicelog` ; \
	label -95,`myindicelog`,1,0,0.1,"`myindice`" ; \
	ppl aline 1,90,`myindicelog`,93,`myindicelog` })
endif
if `($myvlim_min) lt 1 and ($myvlim_max) ge 1` then 
   repeat/i=1:10:1 ( let myindice=i*1E-1 ; let myindicelog=log(myindice) ; \
	ppl aline 1,-93,`myindicelog`,-90,`myindicelog` ; \
	label -95,`myindicelog`,1,0,0.1,"`myindice`" ; \
	ppl aline 1,90,`myindicelog`,93,`myindicelog` })
endif
if `($myvlim_min) lt 10 and ($myvlim_max) ge 10` then 
   repeat/i=1:10:1 ( let myindice=i ; let myindicelog=log(myindice) ; \
	ppl aline 1,-93,`myindicelog`,-90,`myindicelog` ; \
	label -95,`myindicelog`,1,0,0.1,"`myindice`" ; \
	ppl aline 1,90,`myindicelog`,93,`myindicelog` })
endif
if `($myvlim_min) lt 100 and ($myvlim_max) ge 100` then 
   repeat/i=1:10:1 ( let myindice=i*1E1 ; let myindicelog=log(myindice) ; \
	ppl aline 1,-93,`myindicelog`,-90,`myindicelog` ; \
	label -95,`myindicelog`,1,0,0.1,"`myindice`" ; \
	ppl aline 1,90,`myindicelog`,93,`myindicelog` })
endif
if `($myvlim_min) le 1000 and ($myvlim_max) ge 1000` then 
   repeat/i=1:10:1 ( let myindice=i*1E2 ; let myindicelog=log(myindice) ; \
	ppl aline 1,-93,`myindicelog`,-90,`myindicelog` ; \
	label -95,`myindicelog`,1,0,0.1,"`myindice`" ; \
	ppl aline 1,90,`myindicelog`,93,`myindicelog` })
endif

label -105,`log(($myvlim_min))+(log(($myvlim_max))-log(($myvlim_min)))/2`,0,90,0.12,"HEIGHT (mb)"

! Return to default values
ppl window,on
ppl tics .125,.25,.125,.25
ppl axlabp -1,-1

!------------------------
endif

!**************************************************************
cancel data ($mybasefile)
cancel data ($pressurelevelsfile)

cancel var my*
cancel symbols my*

!**************************************************************
set data/restore

!**************************************************************
set mode/last verify
