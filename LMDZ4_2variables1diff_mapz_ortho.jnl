
!**************************************************************
! Author: Patrick Brockmann
! Contact: Patrick.Brockmann@cea.fr
! History:
!
!**************************************************************

set memory/size=20

!************************************************************
def sym title=($01)
def sym file1=($02)
def sym variable1=($03)
def sym file2=($04)
def sym variable2=($05)
def sym zlevel=($06)
def sym qualifiers=/nolab/pal=grads/title=""($07% %)
def sym qualifiersdiff=/nolab/pal=fast_002_rev.spk/title=""($08% %)
def sym polygonfile1=($09%earth_continents%)

def sym polygonfile2=earth_continents
def sym polygonfilediff=earth_continents
def sym CMCP=0 90 ! central meridien and central parallel
def sym margin=25

!************************************************************
! Variable2 will be regridded to variable1 grid
let variable1=($variable1)
let variable2=($variable2)

def sym viewlimits=[z=($zlevel)]
def sym viewlimits2=[z=($zlevel)]

def sym method=go map_ortho_2 COARDS

go page_new -i 1 3 0 100 0 90
set v 1 
use "($file1)"
go symbol_basename_and_define basefile1 "($file1)"
def sym variable1_lstart=`variable1,return=lstart`
def sym variable1_lend=`variable1,return=lend`
if `($variable1_lstart) ne ($variable1_lend)` then 
   say "Variable1 must have a time dimension equals to 1"  
   exit 
endif

!======================================
! Now pres variable is assumed to be present in the file
!go LMDZ_define_pressure ($surface_pressure_name)[l=($variable1_lstart),d=($basefile1)]
let pressure1=pres[l=($variable1_lstart),d=($basefile1)]/100

def sym variable1_ksize=`variable1,return=ksize`
if `($variable1_ksize) eq 39 or ($variable1_ksize) eq 59 or ($variable1_ksize) eq 79` then
        ! LMDZ 39 levels or LMDZ 59 or 79 levels set to 50 levels from ECMWF
        def sym pressurelevelsfile=ECMWF50_stdpressurelevels.nc
        use ($pressurelevelsfile)
        let variable1z = ZAXREPLACE(variable1[d=1],pressure1[d=1],Z[GZ=ECMWF50_LEVELS])
elif `($variable1_ksize) eq 19` then
        ! LMDZ 19 levels set to 17 levels
        def sym pressurelevelsfile=LMDZ_stdpressurelevels.nc
        use ($pressurelevelsfile)
        let variable1z = ZAXREPLACE(variable1[d=1],pressure1[d=1],Z[GZ=LMDZ_stdpressurelevels])
else
        exit
endif
!======================================

($method) ($CMCP) variable1z($viewlimits) ($margin) ($qualifiers) ($polygonfile1)
go text_put 5 90 "@AS($basefile1): ($variable1)" -1 0.35
go text_stat2_put 50 5 variable1z($viewlimits2) 0 

def grid/x=variable1z/y=variable1z/z=variable1z gridvar1

set v 2 
use "($file2)"
($method) ($CMCP) variable2($viewlimits) ($margin) ($qualifiers) ($polygonfile2)
go symbol_basename_and_define basefile2 "($file2)"
go text_put 5 90 "@AS($basefile2): ($variable2)" -1 0.35
go text_stat2_put 50 5 variable2($viewlimits2) 0 

set v 3 
let variable2_regridded=variable2[g=gridvar1]
let diff=variable1z[d=($basefile1)]-variable2_regridded
($method) ($CMCP) diff($viewlimits2) ($margin) ($qualifiersdiff) ($polygonfilediff)
go text_put 5 90 "@ASDifference: ($variable1) - ($variable2)" -1 0.35
go text_stat2_put 50 5 diff($viewlimits2) 0 

ppl shaset protect
go logo_put ipsl

go textlayer_new
go textlayer_text_put 5 95 "@AS($title)" -1 0.5


