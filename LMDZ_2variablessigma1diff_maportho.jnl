
!**************************************************************
! Author: Patrick Brockmann
! Contact: Patrick.Brockmann@ipsl.jussieu.fr
! $Date: 2011/09/12 12:17:48 $
! $Name: ATLAS_672_1_1 $
! $Revision: 1.1.1.7 $
! History:
! Modification: Ionela Musat (2002/08/22) 
!
!**************************************************************

set memory/size=20

!************************************************************
def sym title=$1
def sym file1=$2
def sym variable1=$3
def sym file2=$4
def sym variable2=$5
def sym zlevel=$6
def sym qualifiers=/nolab/pal=grads/title=""$7% %
def sym qualifiersdiff=/nolab/pal=fast_002_rev.spk/title=""$8% %
def sym polygonfile1=$9%earth_continents%
def sym surface_pressure_name=($10%PSOL%)

def sym polygonfile2=earth_continents
def sym polygonfilediff=earth_continents
def sym CMCP=0 90 ! central meridien and central parallel
def sym margin=25

!************************************************************
! Variable2 will be regridded to variable1 grid
let variable1=($variable1)
let variable2=($variable2)

def sym viewlimits=[z=($zlevel)]
def sym viewlimits2=[z=($zlevel)]

def sym method=go map_ortho_2 COARDS

go page_new -i 1 3 0 100 0 90
set v 1 
use "($file1)"
go symbol_basename_and_define basefile1 "($file1)"
def sym variable1_lstart=`variable1,return=lstart`
def sym variable1_lend=`variable1,return=lend`
if `($variable1_lstart) ne ($variable1_lend)` then 
   say "Variable1 must have a time dimension equals to 1"  
   exit 
endif
go LMDZ_define_pressure_variable pressure1 ($surface_pressure_name)[l=($variable1_lstart),d=($basefile1)]
let variable1z = ZAXREPLACE(variable1[d=($basefile1)],pressure1,Z[GZ=LMDZ_stdpressurelevels])
($method) ($CMCP) variable1z($viewlimits) ($margin) ($qualifiers) ($polygonfile1)
go text_put 5 90 "@AS($basefile1): ($variable1)" -1 0.35
go text_stat2_put 50 5 variable1z($viewlimits2) 0 

set v 2 
use "($file2)"
go symbol_basename_and_define basefile2 "($file2)"
def sym variable2_lstart=`variable2,return=lstart`
def sym variable2_lend=`variable2,return=lend`
if `($variable2_lstart) ne ($variable2_lend)` then
   say "Variable2 must have a time dimension equals to 1"
   exit
endif
go LMDZ_define_pressure_variable pressure2 ($surface_pressure_name)[l=($variable2_lstart),d=($basefile2)]
let variable2z = ZAXREPLACE(variable2[d=($basefile2)],pressure2,Z[GZ=LMDZ_stdpressurelevels])
($method) ($CMCP) variable2z($viewlimits) ($margin) ($qualifiers) ($polygonfile2)
go symbol_basename_and_define basefile2 "($file2)"
go text_put 5 90 "@AS($basefile2): ($variable2)" -1 0.35
go text_stat2_put 50 5 variable2z($viewlimits2) 0 

set v 3 
let diff=variable1z[d=($basefile1)]-variable2z[d=($basefile2)]
($method) ($CMCP) diff($viewlimits2) ($margin) ($qualifiersdiff) ($polygonfilediff)
go text_put 5 90 "@ASDifference: ($variable1) - ($variable2)" -1 0.35
go text_stat2_put 50 5 diff($viewlimits2) 0 

ppl shaset protect
go logo_put ipsl

go textlayer_new
go textlayer_text_put 5 95 "@AS($title)" -1 0.5


